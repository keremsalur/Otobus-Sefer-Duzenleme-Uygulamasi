#r "Newtonsoft.Json"

using System.Net;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.Primitives;
using Newtonsoft.Json;
using System.Text;
using System.Data.SqlClient;

public class ResponseJSONData{
    public string result {get; set;}
    public string description {get; set;}
    public List<string> returnData {get; set;}
}

public class Pessanger{
    public double Weight;
    public double Value;
    Pessanger(double w, double v){
        Weight = w;
        Value = v;
    }
}

public static async Task<IActionResult> Run(HttpRequest req, ILogger log)
{
    log.LogInformation("İstek Alındı.");
    ResponseJSONData resJsonData = new ResponseJSONData();
    

    string sqlConString = "[Veritabanı-Bağlantı-Stringi-Girin]";
    SqlConnection sqlCon = new SqlConnection(sqlConString);
    SqlCommand  cmd = new SqlCommand();
    cmd.Connection = sqlCon;

    string requestBody = await new StreamReader(req.Body).ReadToEndAsync();
    dynamic data = JsonConvert.DeserializeObject(requestBody);
    //RequestJSONData reqJSONData = JsonConvert.DeserializeObject<RequestJSONData>(requestBody);
    
    int isExistingInTable(string tableName, string columnName, string value){
        // verilen değeri istenen tablodaki istenen colonda arar
        int returnValue = 0;
        cmd.CommandText = "SELECT * FROM " + tableName + " WHERE "+ columnName +"='"+ value +"'";
        sqlCon.Open();
        SqlDataReader dr = cmd.ExecuteReader();
        if(dr.Read()){
            returnValue = Convert.ToInt32(dr["Id"]);
            dr.Close();
            sqlCon.Close();
        
            return returnValue;
        }
            
        else{
            dr.Close();
            sqlCon.Close();
            return 0;
        }
        
    }

    /*
    İstek tipleri;
    1 - Admin Kayıtıd
    2 - Admin Girişi
    3 - Kullanıcı Kayıtı
    4 - Kullanıcı Girişi
    5 - Durak Ekle
    6 - Durakları Gönder
    7 - Kullanıcıları Gönder
    8 - İstekleri gönder
    9 - Yolcu isteklerini veritabanına kaydetme
    */

    /*
    requestBody = {
        "reqType": "",
        "parameters": []
    }
    */
    
    string reqType = req.Query["reqType"];
    reqType = reqType ?? data?.reqType;
    
    //log.LogInformation(parameters.Length.ToString());
    
    if(reqType.Equals("1")){
        // Admin Kayıt
        string telephoneNumber = req.Query["telephoneNumber"];
        telephoneNumber = telephoneNumber ?? data?.telephoneNumber;
        string userName = req.Query["userName"];
        userName = userName ?? data?.userName;
        string userPassword = req.Query["userPassword"];
        userPassword = userPassword ?? data?.userPassword;
        int id = isExistingInTable("admins","TelephoneNumber",telephoneNumber);
        if(id > 0){
            // Daha önce bu admin kayıt edilmisse
            resJsonData.result = "İstek Reddedildi.";
            resJsonData.description = "Bu telefon numarası ile daha önce admin kaydı yapılmış.";
            resJsonData.returnData = new List<string>();
        }
        else{
            // Daha önce admin kayıtı yapılmadıysa veritabanına kayıt et
            // parameters["TelephoneNumber","UserName","Password"]
            try{
                cmd.CommandText = "INSERT INTO admins (TelephoneNumber,UserName,Password) VALUES('"+ telephoneNumber +"','"+ userName +"','"+ userPassword +"')";
                sqlCon.Open();
                cmd.ExecuteNonQuery();
                sqlCon.Close();
                resJsonData.result = "İstek Başarılı.";
                resJsonData.description = "Admin kayıt işlemi başarıyla gerçekleşti.";
                resJsonData.returnData = new List<string>();
            }
            catch (Exception Ex){
                sqlCon.Close();
            }
        }
        
        /*
        jsonData.result = "OK";
        jsonData.description = "Admin kayıt işlemi başarıyla gerçekleşti.";
        jsonData.returnData = "1";
        */
    }
    else if(reqType.Equals("2")){
        // Admin Girişi

        string telephoneNumber = req.Query["telephoneNumber"];
        telephoneNumber = telephoneNumber ?? data?.telephoneNumber;
        string userName = req.Query["userName"];
        userName = userName ?? data?.userName;
        string userPassword = req.Query["userPassword"];
        userPassword = userPassword ?? data?.userPassword;

        int id = isExistingInTable("admins","TelephoneNumber",telephoneNumber);
        if(id > 0){
            // admin sistemde kayıtlı ise
            resJsonData.result = "İstek Başarılı.";
            // admin sifresinin doğruluğunu kontrol et
            cmd.CommandText = "SELECT * FROM admins WHERE TelephoneNumber='"+ telephoneNumber +"' AND Password='"+ userPassword +"'";
            sqlCon.Open();
            SqlDataReader dr = cmd.ExecuteReader();
            if(dr.Read()){
                resJsonData.returnData = new List<string>(){Convert.ToInt32(dr["Id"]).ToString()};
                dr.Close();
                sqlCon.Close();
                resJsonData.description = "Yönetici girişi yapılıyor.";
            }
            else{
                resJsonData.result = "İstek Reddedildi.";
                resJsonData.description = "Yönetici parolası yanlış.";
            }
            
            // Yönetici Idsini uygulamaya gönder.
            
        }
        else {
            // Daha önce bu admin kayıt edilmisse
            resJsonData.result = "İstek Reddedildi.";
            resJsonData.description = "Bu yönetici kayıtlı değil.";
            resJsonData.returnData = new List<string>();
        }
    }
    else if(reqType.Equals("3")){
        // Kullanıcı Kayıt
        string telephoneNumber = req.Query["telephoneNumber"];
        telephoneNumber = telephoneNumber ?? data?.telephoneNumber;
        string userName = req.Query["userName"];
        userName = userName ?? data?.userName;
        string userPassword = req.Query["userPassword"];
        userPassword = userPassword ?? data?.userPassword;
        int id = isExistingInTable("users","TelephoneNumber",telephoneNumber);
        if(id > 0){
            // Daha önce bu admin kayıt edilmisse
            resJsonData.result = "İstek Reddedildi.";
            resJsonData.description = "Bu telefon numarası ile daha önce kullanıcı kaydı yapılmış.";
            resJsonData.returnData = new List<string>();
        }
        else{
            // Daha önce kullanıcı kayıtı yapılmadıysa veritabanına kayıt et
            // parameters["TelephoneNumber","UserName","Password"]s
            try{
                cmd.CommandText = "INSERT INTO users (TelephoneNumber,UserName,Password) VALUES('"+ telephoneNumber +"','"+ userName +"','"+ userPassword +"')";
                sqlCon.Open();
                cmd.ExecuteNonQuery();
                sqlCon.Close();

                // sefer istek tablosunu güncelle
                // son kayıt edilen kişinin Idsini al
                id = isExistingInTable("users","TelephoneNumber",telephoneNumber);
                cmd.CommandText = "INSERT INTO tripRequest (StationId,UserId,Confirm) VALUES(12,"+ id.ToString() +",1)";
                sqlCon.Open();
                cmd.ExecuteNonQuery();
                sqlCon.Close();

                resJsonData.result = "İstek Başarılı.";
                resJsonData.description = "Kullanıcı kayıt işlemi başarıyla gerçekleşti.";
                resJsonData.returnData = new List<string>();
            }
            catch (Exception Ex){
                sqlCon.Close();
            }
        }
    }
    else if(reqType.Equals("4")){
        // Kullanıcı Girişi

        string telephoneNumber = req.Query["telephoneNumber"];
        telephoneNumber = telephoneNumber ?? data?.telephoneNumber;
        string userName = req.Query["userName"];
        userName = userName ?? data?.userName;
        string userPassword = req.Query["userPassword"];
        userPassword = userPassword ?? data?.userPassword;

        int id = isExistingInTable("users","TelephoneNumber",telephoneNumber);
        if(id > 0){
            // admin sistemde kayıtlı ise
            resJsonData.result = "İstek Başarılı.";
            // admin sifresinin doğruluğunu kontrol et
            cmd.CommandText = "SELECT * FROM users WHERE TelephoneNumber='"+ telephoneNumber +"' AND Password='"+ userPassword +"'";
            sqlCon.Open();
            SqlDataReader dr = cmd.ExecuteReader();
            if(dr.Read()){
                resJsonData.returnData = new List<string>(){Convert.ToInt32(dr["Id"]).ToString(), dr["UserName"].ToString()};
                dr.Close();
                sqlCon.Close();
                resJsonData.description = "Kullanıcı girişi yapılıyor.";
            }
            else{
                resJsonData.result = "İstek Reddedildi.";
                resJsonData.description = "Kullanıcı parolası yanlış.";
            }
            
            // Yönetici Idsini uygulamaya gönder.
            
        }
        else {
            // Daha önce bu admin kayıt edilmisse
            resJsonData.result = "İstek Reddedildi.";
            resJsonData.description = "Bu kullanıcı kayıtlı değil.";
            resJsonData.returnData = new List<string>();
        }
    }
    else if(reqType.Equals("5")){
        // Durak Ekle
        string stationName = req.Query["stationName"];
        stationName = stationName ?? data?.stationName;
        string stationLatitude = req.Query["stationLatitude"];
        stationLatitude = stationLatitude ?? data?.stationLatitude;
        string stationLongitude = req.Query["stationLongitude"];
        stationLongitude = stationLongitude ?? data?.stationLongitude;

        try{
            cmd.CommandText = "INSERT INTO stations (StationName,Latitude,Longitude) VALUES('"+ stationName +"','"+ stationLatitude +"','"+ stationLongitude +"')";
            sqlCon.Open();
            cmd.ExecuteNonQuery();
            sqlCon.Close();
            resJsonData.result = "İstek Başarılı.";
            resJsonData.description = "Durak başarıyla sisteme eklendi.";
            resJsonData.returnData = new List<string>();
        }
        catch (Exception Ex){
            sqlCon.Close();
        }
        
    }
    else if(reqType.Equals("6")){
        // Durakları Gönder
        try{
            List<string> stationsInfo = new List<string>();
            cmd.CommandText = "SELECT * FROM stations";
            sqlCon.Open();
            SqlDataReader dr = cmd.ExecuteReader();
            
            while(dr.Read()){
                // kayıtları return dataya ekle
                stationsInfo.Add(dr["Id"].ToString() + "," + dr["StationName"].ToString() + "," + dr["Latitude"].ToString() + "," + dr["Longitude"].ToString() + "");
            }
            sqlCon.Close();
            resJsonData.result = "İstek Başarılı.";
            resJsonData.description = "Duraklar başarıyla uygulamaya gönderildi.";
            resJsonData.returnData = stationsInfo;
        }
        catch (Exception Ex){
            sqlCon.Close();
        }

    }
    else if(reqType.Equals("7")){
        // Kullanıcıları Gönder
        try{
            List<string> usersInfo = new List<string>();
            cmd.CommandText = "SELECT Id, TelephoneNumber, UserName FROM users";
            sqlCon.Open();
            SqlDataReader dr = cmd.ExecuteReader();
            
            while(dr.Read()){
                // kayıtları return dataya ekle
                usersInfo.Add(dr["Id"].ToString() + "," + dr["TelephoneNumber"].ToString() + "," + dr["UserName"].ToString() + "");
            }
            sqlCon.Close();
            resJsonData.result = "İstek Başarılı.";
            resJsonData.description = "Kullanıcı bilgileri başarıyla uygulamaya gönderildi.";
            resJsonData.returnData = usersInfo;
        }
        catch (Exception Ex){
            sqlCon.Close();
        }
    }
    else if(reqType.Equals("8")){
        // İstekleri gönder
        try{
            List<string> requestsInfo = new List<string>();
            cmd.CommandText = "SELECT u.Id, u.TelephoneNumber, u.UserName, tR.StationId FROM [dbo].[users] as u, [dbo].[tripRequest] as tR WHERE tR.UserId = u.Id AND tR.Confirm = 0";
            sqlCon.Open();
            SqlDataReader dr = cmd.ExecuteReader();
            
            while(dr.Read()){
                // kayıtları return dataya ekle
                requestsInfo.Add(dr["Id"].ToString() + "," + dr["TelephoneNumber"].ToString() + "," + dr["UserName"].ToString() + "," + dr["StationId"].ToString() + "");
            }
            sqlCon.Close();
            resJsonData.result = "İstek Başarılı.";
            resJsonData.description = "İstek bilgileri başarıyla uygulamaya gönderildi.";
            resJsonData.returnData = requestsInfo;
        }
        catch (Exception Ex){
            sqlCon.Close();
        }
    }
    else if(reqType.Equals("9")){
        // Yolcu isteklerini veritabanına kaydetme
        string stationId = req.Query["stationId"];
        stationId = stationId ?? data?.stationId;
        string userIds = req.Query["userIds"];
        userIds = userIds ?? data?.userIds;
        string[] usersIds = userIds.Split(','); 
        try{
            
            sqlCon.Open();

            for(int i = 0; i < usersIds.Length; i++){
                cmd.CommandText = "INSERT INTO tripRequest(StationId,UserId,Confirm) VALUES("+ stationId +", "+ usersIds[i] +", 0)";
                cmd.ExecuteNonQuery();
            }

            sqlCon.Close();
            resJsonData.result = "İstek Başarılı.";
            resJsonData.description = "İstek başarıyla oluşturuldu.";
            resJsonData.returnData = new List<string>();
        }
        catch (Exception Ex){
            sqlCon.Close();
        }
    }
    else if(reqType.Equals("10")){
        // Yolcu isteklerini veritabanından çekme
        string userIds = req.Query["userIds"];
        userIds = userIds ?? data?.userIds;
        //log.LogInformation(userIds);
        List<string> requests = new List<string>();
        try{
            cmd.CommandText = "SELECT * FROM tripRequest WHERE UserId =" + userIds;
            sqlCon.Open();
            SqlDataReader dr = cmd.ExecuteReader();
            while(dr.Read()){
                
                requests.Add(dr["Id"].ToString() + ","+ dr["StationId"].ToString() + "," + dr["Confirm"].ToString() + ";" + dr["BusStationIds"].ToString() +"");
            }
            sqlCon.Close();
            resJsonData.result = "İstek Başarılı.";
            resJsonData.description = userIds + " idli kullanıcının İstekleri başarıyla gönderildi.";
            resJsonData.returnData = requests;
        }
        catch (SqlException Ex){
            log.LogInformation(Ex.ToString());
            sqlCon.Close();
        }
    }
    else if(reqType.Equals("11")){
        // Yolcu isteklerini onaylama ve veritabanına kayıt etme
        string stationIds = req.Query["stationIds"];
        stationIds = stationIds ?? data?.stationIds;
        string pessangerCounts = req.Query["pessangerCounts"];
        pessangerCounts = pessangerCounts ?? data?.pessangerCounts;
        string tripRequestsIds = req.Query["tripRequestsIds"];
        tripRequestsIds = tripRequestsIds ?? data?.tripRequestsIds;
        string tripName = req.Query["tripName"];
        tripName = tripName ?? data?.tripName;


        // otobüs sayısı
        int bussesCount = stationIds.Split(";").Length-1;
        string[] bussesStations = stationIds.Split(";");
        string[] bussesStationsPessangerCounts = pessangerCounts.Split(";");
        try{
            sqlCon.Open();
            for(int i = 0; i < bussesCount; i++){
                int confirmPessangerCountArrayLength = bussesStationsPessangerCounts[i].Split(',').Length-1;
                for(int j = 0; j < confirmPessangerCountArrayLength; j++){
                    string confirmPessangerCount = bussesStationsPessangerCounts[i].Split(',')[j];
                    string busStationId = bussesStations[i].Split(',')[j];
                    //log.LogInformation("Durak Id: " + busStationId + " onaylanan yolcu sayısı: " + confirmPessangerCount);
                    
                    // kisilerin taleplerini onaylas
                    cmd.CommandText = "UPDATE TOP("+ confirmPessangerCount +") tripRequest SET Confirm = 1, BusStationIds = '"+ bussesStations[i] +"' WHERE StationId = "+ busStationId +" AND Confirm = 0";
                    cmd.ExecuteNonQuery();
                    // kalan kişiler varsa onların taleplerini reddet
                    cmd.CommandText = "UPDATE tripRequest SET Confirm = -1 WHERE StationId = "+ busStationId +" AND Confirm = 0";
                    cmd.ExecuteNonQuery();
                }
            }
            
            //genel kaydı yap
            cmd.CommandText = "INSERT INTO trips (TripRequestIds,TripName) VALUES('"+ tripRequestsIds +"', '"+ tripName +"')";
            cmd.ExecuteNonQuery();
            sqlCon.Close();
            resJsonData.result = "İstek Başarılı.";
            resJsonData.description = "Sefer başarıyla düzenlendi.";
            resJsonData.returnData = new List<string>();
        }
        catch (SqlException Ex){
            log.LogInformation(Ex.ToString());
            sqlCon.Close();
            resJsonData.result = "İstek Reddedildi.";
            resJsonData.description = "Hata.";
        }
    }

    return new OkObjectResult(JsonConvert.SerializeObject(resJsonData));
}